// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SUPER_ADMIN
  INSTRUCTOR
  STUDENT
}

enum CategoryStatus {
  ACTIVE
  INACTIVE
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  studentProfile    StudentProfile?
  instructorProfile InstructorProfile?
  adminProfile      AdminProfile?
}

model StudentProfile {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  grade     String?
  // Add more student-specific fields here
}

model InstructorProfile {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  bio       String?
  // Add more instructor-specific fields here
}

model AdminProfile {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  adminLevel Int?
  // Add more admin-specific fields here
}

model Category {
  id          String         @id @default(uuid())
  name        String
  description String
  status      CategoryStatus @default(ACTIVE)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}
